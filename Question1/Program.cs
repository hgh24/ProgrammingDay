namespace Question1;

internal class Program
{
    static string DetectRoles(int[,] votes, int mafiaCount = -1)
    {
        int n = votes.GetLength(0);
        if (mafiaCount < 0) mafiaCount = Math.Max(1, n / 3);

        var stats = new List<(int idx, int white, int black, int score)>();

        for (int j = 0; j < n; j++)
        {
            int white = 0, black = 0;
            for (int i = 0; i < n; i++)
            {
                if (i == j) continue; 
                if (votes[i, j] == 1) white++;
                else if (votes[i, j] == -1) black++;
            }

            int score = white - black;
            stats.Add((j, white, black, score));
        }

        var ordered = stats
            .OrderBy(s => s.score) 
            .ThenByDescending(s => s.black) 
            .ThenBy(s => s.idx) 
            .ToList();

        char[] roles = Enumerable.Repeat('1', n).ToArray(); 
        for (int k = 0; k < Math.Min(mafiaCount, n); k++)
            roles[ordered[k].idx] = '0'; 

        return new string(roles);
    }

    static void Main()
    {
        int[,] m1 = new int[,]
        {
            { 1, 1, 0, -1, 1, 1 },
            { 0, 1, 0, 0, 1, 0 },
            { 0, -1, 1, 1, -1, 0 },
            { 0, 0, 1, 1, -1, -1 },
            { 1, 1, 0, 0, 1, 1 },
            { 1, 1, -1, -1, 1, 1 }
        };
        Console.WriteLine(DetectRoles(m1)); // => 110011

        int[,] m2 = new int[,]
        {
            { 1, -1, 0 },
            { 0, 1, 0 },
            { -1, 1, 1 }
        };
        Console.WriteLine(DetectRoles(m2)); // => 011


        int[,] m3 = new int[,]
        {
            {1, 0, 0, 0, 0, 1, -1, -1, 0},
            {-1, 1, 1, 1, -1, -1, 0, 1, 1},
            {0, 0, 1, 1, 0, 0, 1, 1, 1},
            {-1, 0, 0, 1, -1, -1, 1, 1, 0},
            {0, 0, 0, -1, 1, 0, -1, -1, 0},
            {0, -1, 0, 0, 1, 1, -1, 0, -1},
            {0, 1, 0, 1, 0, -1, 1, 1, 0},
            {-1, 0, 1, 1, 0, -1, 1, 1, 0},
            {-1, 1, 0, 1, 0, 0, 0, 1, 1}
        };
        Console.WriteLine(DetectRoles(m3)); 

        int[,] m4 = new int[,]
        {

            { 1, -1, 1, -1, 0, 1, 1, 1, 1, 0, -1, 1, 1, -1, 0 },
            { 0, 1, -1, 0, -1, 0, 0, -1, 0, -1, 0, 0, 0, 1, 1 },
            { 0, -1, 1, -1, 0, 0, 1, 1, 1, 0, -1, 1, 1, -1, -1 },
            { -1, 0, 0, 1, 0, -1, 0, -1, 0, -1, 1, -1, 0, 0, 0 },
            { 1, -1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, -1, 0 },
            { 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, -1, 1, 1, -1, -1 },
            { 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, -1 },
            { 1, -1, 1, 0, 1, 1, 0, 1, 0, 1, -1, 1, 1, 0, -1 },
            { 1, -1, 1, -1, 1, 0, 0, 0, 1, 0, -1, 1, 1, 0, -1 },
            { 1, -1, 1, 0, 1, 1, 1, 1, 0, 1, -1, 1, 0, -1, 0 },
            { 0, 1, 0, 1, 0, -1, -1, 0, 0, 0, 1, 0, -1, 1, 0 },
            { 1, -1, 1, -1, 1, 0, 1, 1, 1, 0, -1, 1, 0, 0, 0 },
            { 1, 0, 0, -1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0 },
            { -1, 1, -1, 1, -1, 0, 0, 0, 0, 0, 1, -1, 0, 1, 1 },
            { 0, 1, -1, 1, 0, 0, 0, 0, -1, 0, 1, -1, -1, 0, 1 }

        };
        Console.WriteLine(DetectRoles(m4));

        int[,] m5 = new int[,]
        {   
            {1, 0, -1, 1, 1, 0, -1, 1, -1, -1, -1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1},
            {-1, 1, 1, 0, 0, -1, 0, -1, 0, 1, 0, 0, -1, 0, 0, 0, 1, -1, 0, 0, -1},
            {0, 1, 1, -1, -1, 0, 0, 0, 1, 1, 1, 0, -1, 0, -1, -1, 0, 0, 0, -1, -1},
            {0, 0, -1, 1, 0, 0, -1, 1, -1, 0, -1, 1, 1, 1, 1, 1, -1, 1, 1, 1, 0},
            {0, 0, -1, 1, 1, 1, -1, 1, -1, 0, -1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1},
            {1, 0, 0, 1, 1, 1, 0, 1, 0, -1, 0, 1, 1, 1, 0, 1, -1, 1, 0, 1, 1},
            {0, 1, 0, -1, -1, 0, 1, 0, 0, 1, 0, -1, 0, -1, 0, -1, 1, -1, 0, 0, 0},
            {1, 0, -1, 0, 0, 1, -1, 1, 0, -1, -1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0},
            {0, 0, 1, -1, -1, 0, 1, 0, 1, 1, 0, 0, 0, -1, -1, -1, 0, 0, -1, 0, -1},
            {0, 1, 1, -1, 0, -1, 1, -1, 0, 1, 1, 0, -1, -1, 0, -1, 0, -1, 0, 0, 0},
            {-1, 1, 1, 0, 0, 0, 1, -1, 0, 1, 1, -1, -1, 0, -1, -1, 1, 0, 0, -1, 0},
            {1, -1, -1, 0, 1, 1, -1, 1, 0, 0, -1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1},
            {1, -1, -1, 0, 0, 1, 0, 1, -1, -1, 0, 1, 1, 1, 0, 0, -1, 1, 1, 1, 0},
            {1, 0, -1, 1, 1, 0, 0, 1, 0, -1, -1, 1, 1, 1, 1, 1, -1, 0, 0, 0, 1},
            {1, 0, -1, 1, 1, 1, -1, 1, -1, -1, -1, 0, 1, 0, 1, 0, -1, 1, 1, 1, 0},
            {1, 0, 0, 0, 1, 0, -1, 0, 0, -1, -1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1},
            {-1, 0, 1, -1, 0, 0, 1, 0, 1, 1, 0, 0, -1, 0, 0, -1, 1, -1, -1, 0, 0},
            {1, 0, -1, 1, 1, 1, 0, 1, -1, -1, -1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1},
            {1, -1, -1, 1, 0, 1, -1, 1, -1, 0, -1, 0, 1, 1, 1, 1, -1, 0, 1, 1, 1},
            {0, 0, -1, 0, 1, 1, -1, 0, -1, -1, 0, 1, 1, 1, 1, 0, -1, 1, 1, 1, 0},
            {1, 0, 0, 0, 1, 1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1}

        };
            
        Console.WriteLine(DetectRoles(m5));
    }
}